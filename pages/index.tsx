import Head from 'next/head'
import { useContext, useEffect, useState } from 'react';
import { auth } from '../firebase'
import { onAuthStateChanged, signOut, User } from "firebase/auth";
// import UserContext from './userContext'
import { motion } from "framer-motion"

import Calendar from "react-calendar";
import 'react-calendar/dist/Calendar.css';

import { observer } from "mobx-react-lite"


import styles from '../styles/Home.module.css'
import Dailies from './dailies';
import Login from '../components/login';
import { DateContext } from '../store/date';
import Splash from '../components/splash';
import { DailiesContext } from '../store/dailies';


interface HomeProps {
  user: User
}

export default observer(function Home(props: HomeProps) {

  // const [date, setDate] = useState(new Date())
  const { dailies } = useContext(DailiesContext)
  const {date, setDate} = useContext(DateContext)
  const [user, setUser] = useState(props.user)

  useEffect(() => {
    const unsubsc = onAuthStateChanged(auth, user => {
      if (user) {
        setUser(user)
      }
    })

    return unsubsc
  }, [])
  
  return (
    <div className={styles.container}>
      <Head>
        <title>Dailies</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <main className={styles.main}>
        <Splash />
        {/* <h1 className={styles.title}>
            <Splash /> 
            Welcome to <span className={styles.name}>Dailies!</span>
          </h1> */}

        {user ? (
          <>
            <p className={styles.description}>
              <span className={styles.name}>{user.displayName}</span>, Choose a date to see your Dailies
            </p>
            <button className={`btn ${styles.signOut}`} onClick={async () => {
              await signOut(auth)
              setUser(props.user)
            }}>Sign out</button>

            <Calendar onChange={setDate} value={date} tileClassName={({ activeStartDate, date, view }) => {
              if (!dailies) {
                return null
              }
              // console.log(dailies)
              // console.log(activeStartDate, date, view)
              const hasDaily = dailies.find(d => {
                const da = d.data()
                const createdAt = new Date(da.createdAt.seconds * 1000)
                return createdAt.toLocaleString() === date.toLocaleString()
              })
              // console.log(hasDaily, date)
              return hasDaily ? styles.hasDaily : null 
            }}/>

            <Dailies date={date} user={user} />
          </>
        ) : (
          <Login />
        )}
      </main>

      <footer className={styles.footer}>
        <a
          href="https://hasan-sh.github.io/portfolio"
          target="_blank"
          rel="noopener noreferrer"
        >
          Build by{' '} 
            <motion.span
              animate={{ scale: [1, 1.2, 1] }}
              transition={{
                repeatDelay: 2,
                repeat: Infinity,
              }}
              className={styles.logo}> Hasan Sh</motion.span>
        </a>
      </footer>
    </div>
  )
})

export async function getStaticProps() {
  return {
    props: {
      user: auth.currentUser
    }, // will be passed to the page component as props
  }
}